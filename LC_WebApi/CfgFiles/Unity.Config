<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Unity.Configuration"/>
  </configSections>
  <unity>
    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Unity.Interception.Configuration"/>
    <containers>
      <container name="WebApiContainer">
        <extension type="Interception"/>
        <!--DBContext映射配置-->
        <register type="System.Data.Entity.DbContext, EntityFramework" mapTo="LC.SOA.Model.LcDbContext, LC.SOA.Model"/>
        <!--服务注册-->
        <register type="LC.SOA.Interface.ITb_DebugLogService,LC.SOA.Interface" mapTo="LC.SOA.Service.Tb_DebugLogService, LC.SOA.Service">
          <!--
          <interceptor type="InterfaceInterceptor"/>
          <interceptionBehavior type="Ruanmou.Framework.AOP.LogBeforeBehavior, Ruanmou.Framework"/>
          <interceptionBehavior type="Ruanmou.Framework.AOP.LogAfterBehavior, Ruanmou.Framework"/>
          <interceptionBehavior type="Ruanmou.Framework.AOP.ParameterCheckBehavior, Ruanmou.Framework"/>
          <lifetime type="transient" />-->
        </register>
        <register type="LC.SOA.Interface.ITb_ErrorService,LC.SOA.Interface" mapTo="LC.SOA.Service.Tb_ErrorService, LC.SOA.Service"/>
        <register type="LC.SOA.Interface.ITb_LogService,LC.SOA.Interface" mapTo="LC.SOA.Service.Tb_LogService, LC.SOA.Service"/>
        <register type="LC.SOA.Interface.ITb_MqService,LC.SOA.Interface" mapTo="LC.SOA.Service.Tb_MqService, LC.SOA.Service"/>
      </container>
    </containers>
  </unity>
</configuration>